#pragma once

#include <math.h>
#include <stdlib.h>
#include "pam_models/hill/contractile_element.hpp"

namespace pam_models
{
namespace hill
{
/**
 * @brief Serial elastic element (SEE)
 *
 * Serial elastic element (SEE) of the muscle tendon complex (MTC) model.
 *
 * @details The output force of the serial elastic element (SEE) is
 *          modeled by a non-linear toe-zone with linear continution
 *          (GÃ¼nther et al, 2007)
 */
class SerialElasticElement
{
public:
    SerialElasticElement(double l_0,
                         double deltaU_nll,
                         double deltaU_l,
                         double deltaF_0);

    /**
     * Calculates and returns initial force generated in serial elastic element
     * of the muscle unit.
     *
     * @param l_MTC Length of muscle unit
     * @param l_CE Length of contractile element
     * @return Inital serial elastic force
     */
    double init_serial_elastic_element_force(double l_MTC, double l_CE);

    /**
     * Calculates and returns force generated by the serial elastic element
     * of the muscle unit.
     *
     * @param l_MTC Length of muscle unit
     * @param l_CE Length of contractile element
     * @return Serial elastic force
     */
    double get_force(double l_MTC, double l_CE);

    /**
     * Gets l_nll parameter for testing purposes
     *
     * @return l_nll parameter of hill type muscle model
     * @remark Main purpose of this function is unit testing
     */
    double get_l_nll() const;

    /**
     * Gets v parameter for testing purposes
     *
     * @return v parameter of hill type muscle model
     * @remark Main purpose of this function is unit testing
     */
    double get_v() const;

    /**
     * Gets k_nl parameter for testing purposes
     *
     * @return k_nl parameter of hill type muscle model
     * @remark Main purpose of this function is unit testing
     */
    double get_k_nl() const;

    /**
     * Gets k_l parameter for testing purposes
     *
     * @return k_l parameter of hill type muscle model
     * @remark Main purpose of this function is unit testing
     */
    double get_k_l() const;

private:
    /**
     * Calculates muscle force based on inital state of MTC unit.
     *
     * @return Muscle force as sum of all individual element forces
     */
    friend double init_muscle_force_equilibrium(double,
                                                const ParallelElasticElement&,
                                                const ContractileElement&,
                                                const SerialElasticElement&,
                                                double,
                                                double);
    friend class Muscle;

    /**
     * Rest length of SEE in [m] (Kistemaker et al., 2006)
     */
    double l_0_;

    /**
     * Relative stretch at non-linear linear transition (Moerl et al., 2012)
     */
    double deltaU_nll_;

    /**
     * Relative additional stretch in the linear part providing a force
     * increase of deltaF_0 (Moerl, 2012)
     */
    double deltaU_l_;

    /**
     * Both force at the transition and force increase in the linear part
     * in [N] (~ 40// of the maximal isometric muscle force)
     */
    double deltaF_0_;

    /**
     * Model parameter
     */
    double l_nll_;

    /**
     * Model parameter
     */
    double v_;

    /**
     * Model parameter
     */
    double k_nl_;

    /**
     * Model parameter
     */
    double k_l_;
};

}  // namespace hill

}  // namespace pam_models